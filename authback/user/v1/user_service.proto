syntax = "proto3";
package authback.user.v1;

import "authback/user/v1/user.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

service UserService {
  // ユーザ一覧取得
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
  // ユーザ取得
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  // ユーザ取得
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse) {}
  // ユーザ取得
  rpc GetUserByAccount(GetUserByAccountRequest) returns (GetUserByAccountResponse) {}
  // ユーザ作成
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  // ユーザ編集
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  // ユーザ論理削除
  rpc SoftDeleteUser(SoftDeleteUserRequest) returns (SoftDeleteUserResponse) {}
  // ユーザ削除
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  // ユーザインポート
  rpc ImportUsers(ImportUsersRequest) returns (ImportUsersResponse) {}
  // 利用規約の合意
  rpc AgreeContract(AgreeContractRequest) returns (AgreeContractResponse) {}
  // アカウントのリンク
  rpc LinkAccount(LinkAccountRequest) returns (LinkAccountResponse) {}
  // アカウントのリンク解除
  rpc UnlinkAccount(UnlinkAccountRequest) returns (UnlinkAccountResponse) {}

  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {}
  rpc GetSessionAndUser(GetSessionAndUserRequest) returns (GetSessionAndUserResponse) {}
  rpc UpdateSession(UpdateSessionRequest) returns (UpdateSessionResponse) {}
  rpc DeleteSession(DeleteSessionRequest) returns (DeleteSessionResponse) {}
  rpc CreateVerificationToken(CreateVerificationTokenRequest) returns (CreateVerificationTokenResponse) {}
  rpc UseVerificationToken(UseVerificationTokenRequest) returns (UseVerificationTokenResponse) {}
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {}
}

message ListUsersRequest {
  string tenant_id = 1;
  optional string condition = 2;
  optional string role = 3;
  optional bool is_deleted = 4;
  optional InviteStatus invite_status = 5;
  repeated UserTag tags = 6;
  optional bool include_deleted = 100;
  optional string order_by = 900;
  optional string order = 901;
  int64 limit = 902;
  int64 offset = 903;
}
message ListUsersResponse {
  repeated User users = 1;
  int64 count = 2;
}
message GetUserRequest {
  string user_id = 1;
  optional bool include_deleted = 100;
}
message GetUserResponse {
  User user = 1;
}
message GetUserByEmailRequest {
  string tenant_id = 1;
  string email = 2;
  optional bool include_deleted = 100;
}
message GetUserByEmailResponse {
  User user = 1;
}
message GetUserByAccountRequest {
  string tenant_id = 1;
  string provider_account_id = 2;
  string provider = 3;
  optional bool include_deleted = 100;
}
message GetUserByAccountResponse {
  User user = 1;
}
message CreateUserRequest {
  User user = 1;
}
message CreateUserResponse {
  User user = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message UpdateUserRequest {
  User user = 1;
  google.protobuf.FieldMask field_mask = 3000;
}
message UpdateUserResponse {
  User user = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message SoftDeleteUserRequest {
  string user_id = 1;
  bool is_deleted = 2;
}
message SoftDeleteUserResponse {
  User user = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message DeleteUserRequest {
  string user_id = 1;
}
message DeleteUserResponse {
  User user = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message ImportUsersRequest {
  repeated User users = 1;
}
message ImportUsersResponse {}

message AgreeContractRequest {
  string user_id = 1;
}
message AgreeContractResponse {
  google.protobuf.Timestamp commited_at = 10000;
}
message LinkAccountRequest {
  Account account = 1;
}
message LinkAccountResponse {
  Account account = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message UnlinkAccountRequest {
  string tenant_id = 1;
  string provider_account_id = 2;
  string provider = 3;
}
message UnlinkAccountResponse {
  Account account = 1;
  google.protobuf.Timestamp commited_at = 10000;
}

message CreateSessionRequest {
  Session session = 1;
}
message CreateSessionResponse {
  Session session = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message GetSessionAndUserRequest {
  string session_token = 1;
}
message GetSessionAndUserResponse {
  Session session = 1;
  User user = 2;
}
message UpdateSessionRequest {
  Session session = 1;
}
message UpdateSessionResponse {
  Session session = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message DeleteSessionRequest {
  string session_token = 1;
}
message DeleteSessionResponse {
  Session session = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message CreateVerificationTokenRequest {
  VerificationToken verification_token = 1;
}
message CreateVerificationTokenResponse {
  VerificationToken verification_token = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message UseVerificationTokenRequest {
  string identifier = 1;
  string token = 2;
}
message UseVerificationTokenResponse {
  VerificationToken verification_token = 1;
  google.protobuf.Timestamp commited_at = 10000;
}
message GetAccountRequest {
  string tenant_id = 1;
  string provider_account_id = 2;
  string provider = 3;
  optional bool include_deleted = 100;
}
message GetAccountResponse {
  Account account = 1;
}
